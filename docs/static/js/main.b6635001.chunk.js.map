{"version":3,"sources":["Components/08 - Use Reducer/todoReducer.js","Components/08 - Use Reducer/ToDoApp.js","Hooks/UseForm.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","init","JSON","parse","localStorage","getItem","ToDoApp","useReducer","todos","dispatch","initialState","useState","formValues","setformValues","target","name","value","UseForm","description","handleInputChange","reset","useEffect","setItem","stringify","length","className","i","onClick","todoId","desc","console","log","onSubmit","e","trim","preventDefault","newTodo","Date","getTime","placeholder","autoComplete","onChange","ReactDOM","render","document","getElementById"],"mappings":"8LAAaA,EAAc,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACjD,OAAQA,EAAOC,MACb,IAAK,MACH,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOE,UAC3B,IAAK,SACH,OAAOH,EAAMI,QAAQ,SAAAC,GAAI,OAAIA,EAAKC,KAAOL,EAAOE,WAClD,IAAK,SACH,OAAOH,EAAMO,KAAK,SAAAF,GAAI,OACnBA,EAAKC,KAAOL,EAAOE,QAApB,YAAC,eACIE,GADL,IACWG,MAAOH,EAAKG,OACrBH,KAEN,QACE,OAAOL,I,eCRPS,EAAO,WACX,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,IAGzCC,EAAU,WAAO,IAAD,EACDC,qBAAWhB,EAAa,GAAIU,GAD3B,mBACpBO,EADoB,KACbC,EADa,OCPN,WAAsB,IAArBC,EAAoB,uDAAP,GAAO,EACNC,mBAASD,GADH,mBACnCE,EADmC,KACvBC,EADuB,KAc1C,MAAO,CAACD,EAPkB,SAAC,GAAa,IAAZE,EAAW,EAAXA,OAC1BD,EAAc,2BACTD,GADQ,kBAEVE,EAAOC,KAAQD,EAAOE,UAPb,WACZH,EAAcH,KDMkCO,CAAQ,CACxDC,YAAa,KAJY,mBAGnBA,EAHmB,KAGnBA,YAAcC,EAHK,KAGcC,EAHd,KAO3BC,qBAAU,WACNjB,aAAakB,QAAQ,QAASpB,KAAKqB,UAAWf,MAC/C,CAACA,IA0CJ,OACE,gCACE,4CAAeA,EAAMgB,OAArB,OACA,uBACA,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,oBAAIA,UAAU,8BAAd,SAEIjB,EAAMT,KAAI,SAACF,EAAK6B,GAAN,OACR,qBACED,UAAU,kBADZ,UAGE,oBAAGA,UAAS,UAAK5B,EAAKG,MAAQ,YAC9B2B,QAAS,kBA5CHC,EA4CsB/B,EAAKC,QAvC/CW,EAJe,CACbf,KAAM,SACNC,QAASiC,IAHQ,IAACA,GA2CN,UAEGF,EAAE,EAFL,MAEW7B,EAAKgC,QAEhB,wBAAQJ,UAAU,iBAAiBE,QAAU,kBAxDvCC,EAwD0D/B,EAAKC,GAvDnFgC,QAAQC,IAAIH,QAKZnB,EAJe,CACbf,KAAM,SACNC,QAASiC,IAJQ,IAACA,GAwDN,sBAPU/B,EAAKC,WAazB,sBAAK2B,UAAU,QAAf,UACE,+CACA,uBACA,uBAAMO,SAhDO,SAACC,GAEpB,KAAGf,EAAYgB,OAAOV,QAAU,GAAhC,CAIAS,EAAEE,iBAEF,IAAMC,EAAU,CACdtC,IAAI,IAAIuC,MAAOC,UACfT,KAAMX,EACNlB,MAAM,GAQRS,EALe,CACbf,KAAM,MACNC,QAASyC,IAIXhB,MA4BM,UACE,uBACE1B,KAAK,OACLqB,KAAK,cACLU,UAAU,eACVc,YAAY,cACZC,aAAa,MACbC,SAAWtB,EACXH,MAAQE,IAEV,wBAAQO,UAAU,yCAAyC/B,KAAK,SAAhE,kCEpFZgD,IAASC,OACL,cAAE,EAAF,IACFC,SAASC,eAAe,W","file":"static/js/main.b6635001.chunk.js","sourcesContent":["export const todoReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'add':\r\n      return [...state, action.payload];\r\n    case 'delete':\r\n      return state.filter( todo => todo.id !== action.payload);\r\n    case 'toggle':\r\n      return state.map( todo =>\r\n        (todo.id === action.payload)\r\n        ?{...todo, done: !todo.done}\r\n        : todo\r\n        )\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, {useEffect, useReducer} from 'react'\r\nimport { todoReducer } from \"./todoReducer\";\r\nimport \"./style.css\";\r\nimport { UseForm } from '../../Hooks/UseForm';\r\n\r\nconst init = () => {\r\n  return JSON.parse(localStorage.getItem('todos')) || [];\r\n}\r\n\r\nexport const ToDoApp = () => {\r\n  const [todos, dispatch] = useReducer(todoReducer, [], init);\r\n\r\n  const [{description}, handleInputChange, reset] = UseForm({\r\n    description: ''\r\n  });\r\n\r\n  useEffect(()=>{\r\n      localStorage.setItem('todos', JSON.stringify( todos ))\r\n  }, [todos]);\r\n\r\n  const handleDelete = (todoId) =>{\r\n    console.log(todoId)\r\n    const action = {\r\n      type: 'delete',\r\n      payload: todoId\r\n    }\r\n    dispatch(action);\r\n  };\r\n\r\n  const handleToggle = (todoId) => {\r\n    const action = {\r\n      type: 'toggle',\r\n      payload: todoId\r\n    }\r\n    dispatch(action)\r\n  }\r\n\r\n  const handleSubmit = (e) =>{\r\n\r\n    if(description.trim().length <= 1){\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n\r\n    const newTodo = {\r\n      id: new Date().getTime(),\r\n      desc: description,\r\n      done: false\r\n    }\r\n\r\n    const action = {\r\n      type: 'add',\r\n      payload: newTodo\r\n    }\r\n\r\n    dispatch(action);\r\n    reset();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>To Do App({todos.length})</h2>\r\n      <hr/>\r\n      <div className=\"row\">\r\n        <div className=\"col-7\">\r\n          <ul className=\"list-group list-group-flush\">\r\n            {\r\n              todos.map((todo,i) =>(\r\n                <li key = { todo.id }\r\n                  className=\"list-group-item\"\r\n                >\r\n                  <p className={`${todo.done && 'complete'}`}\r\n                  onClick={() => handleToggle(todo.id)}>\r\n                    {i+1} . {todo.desc}\r\n                  </p>\r\n                  <button className=\"btn btn-danger\" onClick={ () => handleDelete(todo.id) }>Borrar</button>\r\n                </li>\r\n              ))\r\n            }\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-5\">\r\n          <h4>Agregar To do</h4>\r\n          <hr/>\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"description\"\r\n              className=\"form-control\"\r\n              placeholder=\"Aprender...\"\r\n              autoComplete=\"off\"\r\n              onChange= {handleInputChange}\r\n              value={ description }\r\n            />\r\n            <button className=\"btn btn-outline-primary mt-1 btn-block\" type=\"submit\">Agregar</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useState } from \"react\"\r\n\r\nexport const UseForm = (initialState={}) => {\r\n  const [formValues, setformValues] = useState(initialState)\r\n  \r\n  const reset = () =>{\r\n    setformValues(initialState);\r\n  }\r\n\r\n  const handleInputChange = ({target}) =>{\r\n    setformValues({\r\n      ...formValues,\r\n      [target.name] : target.value\r\n    });\r\n  };\r\n\r\n  return [formValues, handleInputChange, reset];\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ToDoApp } from './Components/08 - Use Reducer/ToDoApp';\n//import { CounterApp } from './Components/01 - Use State/CounterApp';\n// import { CounterAppWithCustomHooks } from './Components/01 - Use State/CounterAppWithCustomHooks';\n// import { SimpleForm } from './Components/02 - UseEffect/SimpleForm';\n// import { FormWithCustomHook } from './Components/02 - UseEffect/FormWithCustomHook';\n// import { MultipleCustomHooks } from './Components/03 - Examples/MultipleCustomHooks';\n// import { FocusScreen } from './Components/04 - UseRef/FocusScreen';\n//import { HookApp } from './HookApp';\n\nReactDOM.render(\n    < ToDoApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}